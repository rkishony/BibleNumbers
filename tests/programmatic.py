import pytest

from programmatic import hebrew_num_to_int, extract_number_phrases


@pytest.mark.parametrize("hebrew, expected", [
    ("שנים עשר", 12),
    ("משבע שני", 7),
    ("לשבע שני", 7),
    ("בשבע שני", 7),
    ("שתים עשרה", 12),
    ("לשני עשר", 12),
    ("שש מאות אלף ושלושת אלפים וחמש מאות וחמישים", 603550),
    ("ארבעים שנה ושמונה מאות שנה", 840),
    ("שלוש מאות", 300),
    ("שבע ומאתיים", 207),
    ("שבע ומאה", 107),
    ("מאת שנה ושלושים שנה ושבע", 137),
    ("שלושים ומאת", 130),
    ("שבע וארבעים ומאת", 147),
    ("ארבעה עשר", 14),
    ("אלף ושבע מאות וחמישה ושבעים", 1775),
    ("שבע ושלושים ומאת שנה", 137),
    ("מאת אלף ושמונים אלף וששת אלפים וארבע מאות", 186400),
    ("מאת אלף ושמונים אלף וששת אלפים וארבע מאות ושלוש", 186403),
    ("מאת אלף ושמונים אלף וששת אלפים וארבע מאות ושלושים וחמש", 186435),
    ("אלף אלפים", 1000000),
    ("שמונת אלפים", 8000),
    ("ריבוא ושמונת אלפים", 18000),
    ("שתים עשרה שנה ותשע מאות שנה", 912),
])
def test_hebrew_num_to_int(hebrew, expected):
    assert hebrew_num_to_int(hebrew) == expected


@pytest.mark.parametrize(
    "verse,expected",
    [
        (
            "ומן הדני עורכי מלחמה עשרים ושמונה אלף ושש מאות",
            ["עשרים ושמונה אלף ושש מאות"]
        ),
        (
            "שישה נולד לו בחברון וימלוך שם שבע שנים ושישה חודשים ושלושים ושלוש שנה מלך בירושלים",
            ["שישה", "שבע שנים ושישה חודשים ושלושים ושלוש שנה"]
        ),
        (
            "ויהיו כל ימי שת שתים עשרה שנה ותשע מאות שנה וימות",
            ["שתים עשרה שנה ותשע מאות שנה"]
        ),
        # A verse with no numbers
        (
            "והארץ היתה תהו ובהו וחשך על פני תהום",
            []
        ),
        # A verse with multiple separate number phrases
        (
            "חמש עשרה שנה ועשרים וארבעה אלף ושש מאות איש",
            ["חמש עשרה שנה", "ועשרים וארבעה אלף ושש מאות"]
        ),
        # A verse with repeated word
        (
            "הלוא הוגד לאדוני את אשר עשיתי בהרוג איזבל את נביאי יהוה ואחביא מנביאי יהוה מאה איש חמישים חמישים איש במערה ואכלכלם לחם ומים",
            ["מאה", "חמישים", "חמישים"]
        ),
        # A verse with ב
        (
            "ובחודש השני בשבעה ועשרים יום לחודש יבשה הארץ",
            ["השני", "בשבעה ועשרים"]
        ),
        (
            "ויצקת לו ארבע טבעות זהב ונתת על ארבע פעמותיו ושתי טבעות על צלעו האחת ושתי טבעות על צלעו השנית",
            ["ארבע", "ארבע", "ושתי", "ושתי"]
        ),
        # באר שבע
        (
                "כי יעצתי היאסוף ייאסף עליך כל ישראל מדן ועד באר שבע כחול אשר על הים לרוב ופניך הולכים בקרב",
                []
        ),
        (
                "וייצא יעקוב מבאר שבע וילך חרנה",
                []
        ),
        (
                "ואלה שני חיי ישמעאל מאת שנה ושלושים שנה ושבע שנים ויגווע וימת וייאסף אל עמיו",
                ["מאת שנה ושלושים שנה ושבע שנים"]
        ),
        # מאת
        (
                "אלה תולדות שם שם בן מאת שנה ויולד את ארפכשד שנתיים אחר המבול",
                ["מאת שנה"]
        ),
        (
                "וילך מאת אלישע ויבוא אל אדוניו ויאמר לו מה אמר לך אלישע ויאמר אמר לי חיה תחיה",
                []
        ),
        # השבע
        (
                "וקמו שבע שני רעב אחריהן ונשכח כל השבע בארץ מצריים וכילה הרעב את הארץ",
                ["שבע שני"]
        ),
        #
        (
                "כל אלה שבטי ישראל שנים עשר וזאת אשר דיבר להם אביהם ויברך אותם איש אשר כברכתו בירך אותם",
                ["שנים עשר"]
        ),
        (
                "ויסעו בני ישראל מרעמסס סוכותה כשש מאות אלף רגלי הגברים לבד מטף",
                ["כשש מאות אלף"]
        ),
        # תולעת שני ושש
        (
                "ויעש את הפרוכת תכלת וארגמן ותולעת שני ושש מושזר מעשה חושב עשה אותה כרובים",
                []
        ),
        (
            "והאבנים תהיינה על שמות בני ישראל שתים עשרה על שמותם פיתוחי חותם איש על שמו תהיינה לשני עשר שבט",
            ["שתים עשרה", "לשני עשר"]
        ),

        (
            "ואת האלף ושבע המאות וחמישה ושבעים עשה ווים לעמודים וציפה ראשיהם וחישק אותם",
            ["האלף ושבע המאות וחמישה ושבעים"]
        ),
        (
                "",
                []
        ),
        (
                "",
                []
        ),
        (
                "",
                []
        ),

    ]
)
def test_extract_number_phrases(verse, expected):
    result = extract_number_phrases(verse)
    assert result == expected
